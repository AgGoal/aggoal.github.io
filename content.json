{"meta":{"title":"Phaero","subtitle":"","description":"","author":null,"url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2021-09-01T04:00:00.000Z","updated":"2021-11-02T09:23:52.509Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"2021.10.31训练","slug":"2021-10-31训练","date":"2021-11-02T13:09:31.000Z","updated":"2021-11-02T13:16:07.746Z","comments":true,"path":"2021/11/02/2021-10-31训练/","link":"","permalink":"http://example.com/2021/11/02/2021-10-31%E8%AE%AD%E7%BB%83/","excerpt":"","text":"","categories":[{"name":"日常训练","slug":"日常训练","permalink":"http://example.com/categories/%E6%97%A5%E5%B8%B8%E8%AE%AD%E7%BB%83/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]},{"title":"Day7","slug":"FOI夏令营2021Day7","date":"2021-09-01T04:00:06.000Z","updated":"2021-11-02T13:14:26.804Z","comments":true,"path":"2021/09/01/FOI夏令营2021Day7/","link":"","permalink":"http://example.com/2021/09/01/FOI%E5%A4%8F%E4%BB%A4%E8%90%A52021Day7/","excerpt":"","text":"解析几何 解析几何基础 坐标系、直线、线段 多边形 圆 向量 点乘 叉乘 向量旋转 点是否在直线上 叉乘等于0 两直线平行关系 点是否在线段上 直接判断长度相加。 两线段是否相交 快速排斥实验+跨立实验 点到线段的最近距离 凸包 graham 半平面交 S&amp;I算法 旋转卡壳 最小圆覆盖 例题：UVA1103 Wall 给定\\(n(n\\leq 1000)\\)个点，求出最短的包围所有点的轮廓且满足任一点到轮廓的距离不小于给定的\\(L\\)。 凸壳长度+\\(2\\pi L\\) 例题：ZJOI2008 瞭望塔 例题：HNOI2008水平可见直线 例题：Luogu1354 房间最短路问题","categories":[{"name":"培训","slug":"培训","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/"},{"name":"FOI2021夏令营","slug":"培训/FOI2021夏令营","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/FOI2021%E5%A4%8F%E4%BB%A4%E8%90%A5/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]},{"title":"Day6","slug":"FOI夏令营2021Day6","date":"2021-09-01T04:00:04.000Z","updated":"2021-11-02T13:14:51.277Z","comments":true,"path":"2021/09/01/FOI夏令营2021Day6/","link":"","permalink":"http://example.com/2021/09/01/FOI%E5%A4%8F%E4%BB%A4%E8%90%A52021Day6/","excerpt":"","text":"网络流 二分图 设图\\(G=(V,E)\\)是一个无向图，如果顶点\\(V\\)可分割为两个互不相交的子集\\((A,B)\\)，并且途中的每条边\\((i,j)\\)所关联的两个顶点\\(i\\)和\\(j\\)分别属于这两个不同的顶点集，则称图\\(G\\)为一个二分图。 二分图染色 用来判断二分图 二分图匹配 匈牙利算法 二分图最大权匹配 KM算法 网络流 容量网路是一个有向图，图的边\\((u,v)\\)有非负的权\\(c(u,v)\\)，被称为容量。 图中有一个称为源的节点和一个称为汇的节点。 实际通过每条边的流量被称为\\(f(u,v)\\) 参量网络是一个结构和容量网络相同的有向图，只不过每条边的边权的权值为\\(c(u,v)-f(u,v)\\) 一个合法网络流被称为可行流，应该满足： 容量限制：\\(0\\leq f(u,v) \\leq c(u,v)\\) 斜对称性：对于非源汇节点\\(u\\)，有\\(f(u,v)=-f(v,u)\\) 最大流 设图\\(G=(V,E)\\)是一个有向图，每条边上有流量限制，求从源点\\(S\\)到汇点\\(T\\)的最大流量，这就是最大流问题。 EK算法 每次在残量网络上找到一条增广路，然后再这条路上每条边的边权减去路上最小的边权，然后建反向边。 Dinic算法 主要步骤：循环增广，每次增广后再次进行BFS分层，直到\\(S\\)与\\(T\\)不连通。 层次网络：为了避免走太长的路径浪费时间，Dinic算法每次增广前都对残量网络进行了一个标号，形成一个层次网络。从\\(S\\)开始进行BFS，将距离\\(S\\)距离为\\(k\\)的标记\\(k\\)，这样就可以形成残量网络。 增广： 在增广的时候，只走\\(level_u=level_{u+1}+1\\)的边，满足这个等式的边成为允许弧。 增广的过程就是从\\(S\\)开始跑DFS，只允许走允许弧。再DFS到一个节点\\(u\\)时再额外传入一个参数\\(rest\\)，表示从\\(s\\)到这里最多能流入的流量，DFS返回实际使用的流量。 然后从\\(u\\)开始，通过允许弧往下，传给下一个节点的\\(rest\\)就是当前\\(rest\\)和残量中较小的哪一个，然后\\(rest\\)减去\\(DFS\\)的返回值。 再找下一条允许弧继续DFS，直到\\(rest=0\\) DFS的终点就是遇到\\(T\\)的时候，这时直接返回\\(rest\\)。 当前弧优化：每次增广时，对于一个点，它前面尝试增广所用的弧可以不用再跑一遍。 最小割 一个网络的割是一个边集，如果把这个集合的边删去，这个网络就不再联通。 最大流最小割定理：对于一个网络流，其最大流的流量等于其最小割的流量。 费用流 最小费用最大流，流量网络中每条边都有单位流量的费用，求在运输量最大的情况下，花费的最小费用。 EK算法 zkw费用流（Dinic改） 再BFS是找最短路进行分层。 线性规划 线性约束+变量+目标函数最大/小化 网络流问题的线性规划模型 对偶问题 平面图最小割 例题1：poj1459 Power Network 一个电力网络由节点（电站、消费者或中转站）和输电线组成。 一个电站可以生产一些点，一个消费者可以消耗一些点，中转站用来传递电力。 每条输电线单位时间能够传输的电力是无限的。 你需要计算单位时间内这个店里网络能够支撑多少电力消耗。 建立超级源点、超级汇点，源点向电站连容量无限大的边，汇点向消费者连容量无限大的边，跑最大流。 例题2：poj1149 PIGS 有\\(m\\)个猪圈，每个猪圈开始有若干头猪，一开始每个猪圈都是关闭的。 依次来了\\(n\\)个顾客，每个顾客分别打开一些猪圈，然后买了一些猪。每个顾客能够买的著有一个上线。在每个顾客走后，打开的猪圈里的猪可以任意交换，之后所有猪圈关闭。 问总共可以买出多少只猪。 \\(1\\leq n\\leq 100,1\\leq m\\leq 1000\\) 例题3：poj2713 Matrix1 有一个\\(n\\times m\\)的网格，每个格子有价值\\(c_{i,j}\\)的宝石。 问最多能够取价值多少的宝石，使得任意两块宝石不相邻。 其中\\(1\\leq n,m\\leq 50,0\\leq c_{i,j}\\leq 40000\\) 例题4：bzoj1101 狼抓兔子 题意略。 例题5：k取方格数 有一个\\(n\\times n\\)的放个图，方格中有正整数。从左上角开始走到右下角，只能向右或者向下走，走的过程中取出方格的数（取出后方格数字变为\\(0\\)）。 一共可以走\\(k\\)次，你需要求出最多能够得到多少的数。 \\(n\\leq 50,k\\leq 10\\) 拆点，跑最大费用最大流 dag最小路径覆盖","categories":[{"name":"培训","slug":"培训","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/"},{"name":"FOI2021夏令营","slug":"培训/FOI2021夏令营","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/FOI2021%E5%A4%8F%E4%BB%A4%E8%90%A5/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]},{"title":"Day5","slug":"FOI夏令营2021Day5","date":"2021-09-01T04:00:03.000Z","updated":"2021-11-02T13:15:13.986Z","comments":true,"path":"2021/09/01/FOI夏令营2021Day5/","link":"","permalink":"http://example.com/2021/09/01/FOI%E5%A4%8F%E4%BB%A4%E8%90%A52021Day5/","excerpt":"","text":"图论 回路 欧拉回路 差分约束 连通分量 强连通分量 点双连通分量、割点 边双连通分量、割边 回路 定义：有向图\\(G=(V,E)\\)中，若边序列\\(P=(e_1,e_2,\\cdots,e_q)\\)，其中\\(e_k=(v_i,v_j)\\)，满足\\(v_i\\)是\\(e_{k-1}\\)的终点，则称\\(P\\)是\\(G\\)的一条有向道路。若\\(e_q\\)的终点也是\\(e_1\\)的起点，则称\\(P\\)是\\(G\\)的回路。 无向图定义显然。 初级回路：回路中所有点的编号互不相同 简单回路：回路中所有边的编号互不相同 欧拉回路 无向连通图\\(G=(V,E)\\)中的一条经过所有边的简单道路（回路）成为\\(G\\)的欧拉道路（回路） 无向连通图\\(G\\)有欧拉回路的充要条件是各顶点的度都是偶数。 必要性：欧拉回路经过每个点是都会进去一次在出来一次，每次对一个点的度数贡献是\\(2\\)，所以每个点的度数都一定是偶数。 充分性：构造法。假定一个起点，一定可以找到一个简单的普通回路。将回路删去，剩下所有点的度数都是偶数，由于图联通，剩下的图与回路相交，再找一个更大的回路，可以与第一个回路构成更大的回路，重复操作知道找到原图的欧拉回路。 欧拉道路：欧拉回路删去其中的一条边，即欧拉道路的起点和终点连边后成为欧拉回路。 例题：poj1386 Play On Words 给你\\(n\\)个单词，要求这些单词相连，要求是前面的字母的尾字母和后面单词的头字母相同，问你这\\(n\\)个单词能不能全部连起来，可以连成一条链或者连成一个环。 \\(n\\leq 10^5\\) 例题：混合图的欧拉回路 给定一张既有无向边又有有向边的图，求其欧拉回路 图中无向边可以从\\(a\\)走向\\(b\\)，也可以从\\(b\\)走向\\(a\\)，但只能走一次。 图中的无向边只能按照给定方向走，也只能走一次。 正解：先随便指定无向边的方向，用网络流求出选错方向的无向边。 例题：2020联合省选 丁香之路 有一个\\(n\\)个点的图，\\(i,j\\)两点测长度为\\(|i-j|\\)。有\\(m\\)条必须经过的边。求从\\(s\\)出发，到每个\\(i\\)结束并且经过所有必须经过边的最小长度。 \\(n\\leq 2500,m\\leq \\dfrac{n(n-1)}{2}\\) 差分约束 给定若干个不等式\\(x_v\\leq x_u+a\\)，求\\(x_t-x_s\\)的最大值。 对于一个不等式\\(x_v\\leq x_u+a\\)，可以在图上有\\(u\\)向\\(v\\)连一条长为\\(a\\)的边。 把不等式的解集问题变成了最短路问题。 负环 有向图中边权和为负数的回路即为负环。 当差分约束系统中出现负环时该方程组误解。 例题：poj3169 Layout 一共有\\(n\\)头牛，有\\(ml\\)个关系好的牛的信息，有\\(md\\)个关系不好的牛的信息，关系好的牛之间不能查过某个距离，关系差的两头牛之间不能少于某个距离。求\\(1\\)号牛和\\(n\\)好牛的最大距离，如果距离无限大输出\\(-2\\)，如果无解输出\\(-1\\)。 板题。 例题：poj2109 Intervals 有\\(n\\)个限制，每个限制有三个数\\(a_i,b_i,c_i\\)组成，表示\\([a_i,b_i]\\)中你至少需要选择\\(c_i\\)个数。求最少需要选择的数的个数。 前缀和差分约束。 例题：[XVIII Open Cup named after E.V.Pankratiev. Gp of Romania] Gravity 给你一个\\(n\\times m\\)的矩阵，每个位置为点或井号。点的位置为空，井号构成的四连通块会受重力向下掉落（不同四连通块不会连接在一起），直到无法掉落位置。求最后得到的矩阵。 \\(n,m\\leq 2000\\) 每个物体按列建立不等式，对其下落高度进行差分约束。 连通分量 连通分量 图的极大连通子图。 点双连通分量 图\\(G\\)的极大连通子图\\(G&#39;\\)，满足\\(G&#39;\\)中任意两点之间都存在两条不在除端点之外相交的初级路径。 边双连通分量 图\\(G\\)的极大连通子图\\(G&#39;\\)，满足\\(G&#39;\\)中任意两点之间都存在两条没有公共边的简单路径。 割点 对于图\\(G\\)中的任意一个点\\(v\\)，如果删去\\(v\\)和与\\(v\\)相邻的所有边，图的连通分量个数增加，则\\(v\\)为图\\(G\\)的一个割点。 割边 对于图\\(G\\)中的任意一个点边\\(e\\)，如果删去\\(e\\)，图的连通分量个数增加，则\\(e\\)为图\\(G\\)的一个割边。 强连通分量 有向图\\(G\\)的极大连通子图\\(G&#39;\\)，满足\\(G&#39;\\)中任意两点之间都存在一条道路。 Tarjan（求强连通分量） 1 Tarjan（求点双分量、割点） 1 Tarjan（求边双分量、割边） 1 例题：卖萌 给定一张带权无向图\\(G\\)，再给定两个点\\(S,T\\)，求每一条边山区后\\(S\\)到\\(T\\)的最短路是否会增加。 \\(n\\leq 40000,m\\leq 2\\times 10^5\\) 例题：网络流 给定一张图\\(G\\)，图中每条边的流量为\\(1\\)。给定\\(q\\)个询问，每个询问为加一条流量为\\(1\\)的边后（询问各自独立），图中有多少个点对间的最大流为1. \\(n,q\\leq 10^5,m\\leq 5\\times 10^5\\) 传递闭包 步骤1：求强连通分量 步骤2：缩点 步骤3：在DAG上用bitset 例题：Matrix 给定一个\\(n\\times n\\)的实数矩阵\\(A\\)，满足\\(\\forall i,A_{i,i}=0,\\forall i \\neq j,1\\leq A_{i,j}&lt;1\\) 令\\(E\\)为单位矩阵，即\\(\\forall i,A_{i,i}=0,\\forall i\\neq j,A_{i,j}=0\\)，求\\(E-A\\)的逆矩阵中有多少个位置不为\\(0\\)，数据保证矩阵有逆。 \\(n\\leq 2000\\)","categories":[{"name":"培训","slug":"培训","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/"},{"name":"FOI2021夏令营","slug":"培训/FOI2021夏令营","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/FOI2021%E5%A4%8F%E4%BB%A4%E8%90%A5/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]},{"title":"Day4","slug":"FOI夏令营2021Day4","date":"2021-09-01T04:00:02.000Z","updated":"2021-11-02T13:15:43.590Z","comments":true,"path":"2021/09/01/FOI夏令营2021Day4/","link":"","permalink":"http://example.com/2021/09/01/FOI%E5%A4%8F%E4%BB%A4%E8%90%A52021Day4/","excerpt":"","text":"DP DP模型 树形DP 例题 树上带权最大独立集。（一棵树，每一个点有权值\\(v_i\\)，求一个独立集使得独立集中的点权和最大）。 令\\(f_{i,0/1}\\)表示只考虑 例题 树上带权最大独立集且独立集大小不能超过\\(m\\)（树上背包）。 区间DP 例题：合并石子 略。 状压DP 例题：旅行商问题 给定一张带权无向完全图，求路径长度最小的哈密顿回路。 #### 例题：图的色数 给定一张无向图，将每个点染上一种颜色使得相邻点颜色不相同，求最少需要几种颜色。 概率期望DP 例题 有\\(n\\)个球，每次随机抽出一个球后放回，问期望多少次才能抽数每个球至少一次。 例题 给定一张有向无环简单图，初始在点\\(1\\)，每次操作等概率随机一条出边移动直到移动到没有出边的点为止，问停留在每个点的概率。 例题 给定一张无向简单图，初始在点\\(1\\)，每次操作等概率随机一条出边移动直到移动到点\\(n\\)为止，问移动到每个点的期望次数。 数位DP 例题 求\\(1\\)到\\(n\\)中满足含有子串\"\\(13\\)\"且能被\\(13\\)整除的数的个数。 数据结构优化DP 例题：最长上升子序列 树状数组，二维偏序。 例题1 agc049d Convex Sequence 求满足以下条件的长度为\\(n\\)的非负整数序列\\(A\\)的个数，对\\(10^9+7\\)取模： \\(1.\\,sum^n_{i=1}A_i=m\\) \\(2.\\,\\forall2\\leq i\\leq n-1,2A_i\\leq A_{i-1} + A_{i+1}\\) \\(1\\leq n,m\\leq 10^5\\) 例题2 agc022e Median Replace 定义一个长度为奇数\\(n\\)的\\(01\\)串是美丽的，当且仅当每次将连续三个位替换为它们的中位数\\({\\dfrac{n-1}{2}}\\)次，这个船变成一个字符\\(1\\)。 给定一个有\\(0,1\\)和\\(?\\)组成的字符串\\(S\\)，求将问号替换为\\(0\\)和\\(1\\)后，得到一个美丽的字符串的方案数 答案对\\(10^9+7\\)取模 \\(n\\leq3\\times10^5\\) 例题3 CF585F Digits of Number Pi 给定一个数字串\\(s\\)，可能存在前导零 定义一个长度为\\(d\\)的数字串\\(t\\)是“半出现的”，当且仅当存在一个长度至少为\\(\\lfloor\\dfrac{d}{2}\\rfloor\\)的\\(s\\)和\\(t\\)的公共子串 给定两个无前导零的\\(d\\)位的数字\\(x,y\\)，问\\([x,y]\\)中所有的整数所代表的数字串中，有多少个是“半出现的”。 答案对\\(10^9+7\\)取模 \\(1\\leq |s|\\leq 1000,2\\leq d\\leq 50,x\\leq y\\) 例题4 arc108e Random IS 给定一个长度为\\(n\\)的排列\\(a\\)，定义一个排列时合法的当且仅当标记的数满足单调递增。 每次等概率选择一个未标记过且标记后序列合法的数标记，无法标记时结束，求期望的标记次数 对\\(10^9+7\\)取模。 \\(n\\leq 2000\\) 例题5 agc046d Secret Passage 给定一个仅包含\\(0\\)和\\(1\\)的字符串\\(S\\)，求进行如下操作若干次后，能得到多少种不同的字符串： 删去\\(S\\)中的前两个字符的其中一个，将另一个移动至\\(S\\)的任意位置。 对\\(998244353\\)取模 \\(1\\leq |S|\\leq 300\\) 例题6 agc045c Range Set 给定一个长度为\\(n\\)的\\(01\\)串，初始时全为\\(0\\)。 以任意顺序进行若干次以下两种操作，求能得到多少种不同的字符串，对\\(10^9+7\\)取模： \\(1.\\,\\)选择连续\\(A\\)个字符，将它们都变成\\(0\\)。 \\(2.\\,\\)选择连续\\(B\\)个字符，将它们都变成\\(1\\)。 \\(n\\leq 5000\\) 例题7 nomura2020f Sorting Game 有一个长度为\\(m\\)的序列\\(a\\)，值域为\\([0,2^n-1]\\)。 Snuke先进行以下操作任意次： 选择一个数\\(d\\)，将序列\\(a\\)中的所有数的二进制下第\\(d\\)位变成\\(0\\)。 接着Takahashi想通过若干次交换，将序列\\(a\\)变为单调不降的序列，但每次交换只能交换相邻的两个数，并且这两个数二进制下只能有一位不同。 问在所有\\(2^{mn}\\)个序列\\(a\\)中，有多少个序列\\(a\\)满足Takahashi能实现他的目标。 对\\(10^9+7\\)取模 \\(n,m\\leq 5000\\)","categories":[{"name":"培训","slug":"培训","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/"},{"name":"FOI2021夏令营","slug":"培训/FOI2021夏令营","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/FOI2021%E5%A4%8F%E4%BB%A4%E8%90%A5/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]},{"title":"Day3","slug":"FOI夏令营2021Day3","date":"2021-09-01T04:00:01.000Z","updated":"2021-11-02T13:15:54.157Z","comments":true,"path":"2021/09/01/FOI夏令营2021Day3/","link":"","permalink":"http://example.com/2021/09/01/FOI%E5%A4%8F%E4%BB%A4%E8%90%A52021Day3/","excerpt":"","text":"数学知识 舒志彪 老师讲课太快了，刚课到一半就放弃记笔记了，这是课后补的。 目录 组合数学基础 加法原理 乘法原理 选取问题——组合计数模型 集合的排列 集合的组合 多重集的排列 多重集的组合 二项式定理 组合恒等式——递推式 组合恒等式——变下项求和 恒等式求和——变系数和 恒等式求和——变上项求和 非降计数模型 Fibonacci数列 Catalan数 同余 同余 一次同余方程 逆元 扩展欧几里得算法 中国剩余定理(CRT) 欧拉函数 欧拉定理 *素性测试(Miller-Rabin) *大数质因数分解(Pollard Rho) 杂项 矩阵快速幂 高斯消元 期望DP 组合数学基础 集合的排列 定义 从\\(n\\)元集\\(S\\)中有序、不重复选取的\\(r\\)个元素成为\\(S\\)的一个\\(r\\)排列，\\(S\\)的所有\\(r\\)排列的数目记作\\(P(n,r)\\)或\\(P_n^r\\)。 定理： \\[ P(n,r)=\\dfrac{n!}{(n-r)!} \\] 证明：使用乘法原理。 推论：集合\\(S\\)的环排列数为 \\[ \\dfrac{P(n,r)}{r} \\] 集合的组合 定义：从\\(n\\)元集\\(S\\)中无序、不重复选取的\\(r\\)个元素成为\\(S\\)的一个\\(r\\)组合，\\(S\\)的所有\\(r\\)组合的数目记作\\(C(n,r)\\)或\\(C^r_n\\)。 定理： \\[ C(n,r)=\\dfrac{P(n,r)}{r!} \\] 推论 \\[ C(n,r)=\\dfrac{n}{r}{C(n-1,r-1)} \\] \\[ C(n,r)=C(n,n-r) \\] \\[ C(n,r)=C(n-1,r-1)+C(n-1,r) \\] 上述三个推论与杨辉三角相对应。 多重集的排列 多重集\\(S=\\{n_1a_1,n_2a_2,\\cdots,n_ka_k\\},0&lt;n_i\\leq +\\infty\\) 全排列\\(r=n,n=n_1+n_2+\\cdots+n_k\\)， \\[ N=\\dfrac{n!}{n_1!n_2!\\cdots n_k!}=\\binom{n}{n_1\\,\\,n_2\\,\\,\\cdots\\,\\,n_k} \\] 证明：分步选取，先放\\(a_1\\)，有\\(C(n,n_1)\\)种方法，再放\\(a_2\\)有\\(C(n-n_1-n_2,n_2)\\)种方法，\\(\\cdots\\)，放\\(a_k\\)，有\\(C(n-n_1-n_2-\\cdots-n_{k-1},n_k)\\)种方法。 \\[ N=C(n,n_1)C(n-n_1,n_2)\\cdots C(n-n_1-n_2-\\cdots-n_{k-1},n_k)\\\\=\\dfrac{n!}{n_1!(n-n_1)!}\\dfrac{(n-n_1)!}{n_2!(n-n_1-n_2)!}\\cdots \\dfrac{(n-n_1-\\cdots-n_{k-1})!}{n_k!0!}\\\\=\\dfrac{n!}{n_1!n_2!\\cdots n_k!} \\] 若\\(r\\leq n_i\\)时，每个位置都有\\(k\\)种选法，有\\(N=k^r\\)。 多重集的组合 多重集\\(S=\\{n_1a_1,n_2a_2,\\cdots,n_ka_k\\},0&lt;n_i\\leq +\\infty\\) 当\\(r\\leq n_i\\)时，\\(S\\)的\\(r\\)组合数为 \\[ N=C(k+r-1,r) \\] 证明：一个\\(r\\)组合为\\(\\{x_1a_1,x_2a_2,\\cdots,x_ka_k\\}\\),其中\\(x_1+x_2+\\cdots+x_k=r\\)，\\(x_i\\)为非负整数，这个不定方程非负整数解对应于\\(r\\)个\\(1\\)，\\(k-1\\)个\\(0\\)的全排列数为 \\[ N=\\dfrac{(r+k-1)!}{r!(k-1)!}=C(k+r-1,r) \\] 二项式定理 定理：设\\(n\\)是正整数，对一切\\(x\\)和\\(y\\) \\[ (x+y)^n=\\sum^{n}_{k=0}\\binom{n}{k}x^ky^{n-k} \\] 证明：数学归纳法、组合分析法，分析系数的每一项，参考杨辉三角即可得证。 组合恒等式——递推式 \\[ 1.\\binom{n}{k} = \\binom{n}{n-k} \\] \\[ 2.\\binom{n}{k} = \\dfrac{n}{k}\\binom{n-1}{k-1}\\\\ \\] \\[ 3.\\binom{n}{k} = \\binom{n-1}{k}+\\binom{n-1}{k-1} \\] 1式用于化简。 2式用于求和时消去变系数。 3式即（Pascal公式）用于求和时拆项（两项之和或者差），然后合并。 组合恒等式——变下项求和 \\[ 4.\\sum^{n}_{k=0}\\binom{n}{k}=2^n \\] \\[ 5.\\sum^n_{i=0}(-1)^i\\binom{n}{k}=0 \\] 4式证明：设\\(S=\\{1,2,\\cdots,n\\}\\)，下面计数\\(S\\)的每个子集，\\(n\\)元集合的\\(k\\)子集个数是\\(\\binom{n}{k}\\)，根据加法原理，子集总数为\\(\\sum^{n}_{k=0}\\binom{n}{k}=2^n\\)。 恒等式求和——变系数和 \\[ 6.\\sum^n_{k=0}k\\binom{n}{k}=n2^{n-1}\\\\ \\] \\[ 7.\\sum^n_{k=0}k^2\\binom{n}{k}=n(n+1)2^{n-2} \\] 证明：二项式定理、级数求导，其他组合恒等式带入。 证明公式6 \\[ (1+x)^n=\\sum^n_{k=0}\\binom{n}{k}x^k=1+\\sum^n_{k=1}\\binom{n}{k}x^k \\] \\[ Derivative: n(1+x)^{n-1}=\\sum^n_{k=1}k\\binom{n}{k}x^{k-1} \\therefore n2^{n-1}=\\sum^n_{k=1}k\\binom{n}{k}=\\sum^n_{k=0}k\\binom{n}{k} \\] 证明公式7 \\[ \\sum^n_{k=0}\\binom{n}{k}=\\sum^n_{k=1}k^2\\dfrac{n}{k}\\binom{n-1}{k-1}\\\\=\\sum^n_{k=1}kn\\binom{n-1}{k-1}=n\\sum^n_{k=1}[(k-1)+1]\\binom{n-1}{k-1}\\\\=n\\sum^n_{k=1}(k-1)\\binom{n-1}{k-1}+n\\sum^n_{k=1}\\binom{n-1}{k-1}\\\\=n\\sum^{n-1}_{k=0}k\\binom{n-1}{k}+n2^{n-1}\\\\=n(n-1)2^{n-2}+n2^{n-1}=n(n+1)2^{n-2} \\] 恒等式求和——变上项求和 \\[ 8.\\sum^n_{l=0}\\binom{l}{k}=\\binom{n+1}{k+1},\\,\\,n,k\\in N \\] 证明：组合分析。令\\(S=\\{a_1,a_2,\\cdots,a_{n+1}\\}\\)为\\(n+1\\)元集合，等式右边式\\(S\\)的\\(k+1\\)子集数。考虑另一种分类计数的方法。将所有的\\(k+1\\)元集合分成如下\\(n+1\\)类： 第\\(1\\)类：含\\(a_1\\)，剩下\\(k\\)个元素取自\\(\\{a_2,\\cdots,a_{n+1}\\}\\)，有\\(\\binom{n}{k}\\)种. 第\\(2\\)类：不含\\(a_1\\)，含\\(a_2\\)，剩下\\(k\\)个元素取自\\(\\{a_3,\\cdots,a_{n+1}\\}\\)，有\\(\\binom{n-1}{k}\\)种。 \\(\\cdots\\) 不含\\(a_1,a_2,\\cdots,a_n\\)，含\\(a_{n+1}\\),剩下\\(k\\)个元素取自空集\\(\\binom{0}{k}\\)。 从而由加法原理得证。 组合恒等式解题办法小结 证明方法： 已知恒等式代入。 二项式定理。 幂函数的求导、积分。 归纳法。 组合分析。 求和方法： Pascal公式。 级数求和。 观察和的结果，用归纳法证明。 利用已知的公式。 非降计数模型 \\((0,0)\\)到\\((m,n)\\)的非降路径数：\\(C(m+n,m)\\)。 \\((a,b)\\)到\\((m,n)\\)的非降路径数等于\\((0,0)\\)到\\((m-a,n-b)\\)的非降路径数。 \\((a,b)\\)经过\\((c,d)\\)到\\((m,n)\\)的非降路经数：乘法原理。 Fibonacci 一笔带过，只提到了\\(F_n=F_{n-1}+F_{n-2}\\)。 Catalan数 一个凸n边形用三角形剖分的方案数即为Catalan数\\(h_n\\)。 如图所示，以\\(v_{n+1}v_1\\)为一条边的三角形\\(v_{n+1}v_1v_k\\)将凸\\(n+1\\)边形分割成两部分。 一部分是\\(k\\)边形，另一部分是\\(n-k-2\\)边形，\\(k=2,3,\\cdots,n\\)，即\\(v_k\\)点可以是\\(v_2,v_3,\\cdots,v_n\\)点中任意一点。依据加法原理有： \\[ h_{n+1}=\\sum^n_{k=2}h_kh_{n-k+2}=h_2h_n+h_3h_{n-1}+\\cdots+h_{n-1}h_3+h_nh_2 \\] 递推关系 \\[ h_{n+1}=h_2h_n+h_3h_{n-1}+\\cdots+h_{n-1}h_3+h_nh_2 \\] \\[ (n-3)h_n=\\dfrac{n}{2}(h_3h_{n-1}+h_4h_{n-2}+\\cdots+h_{n-2}h_4+h_{n-1}h_3) \\] 计算公式 \\[ h_{n+1}=\\dfrac{1}{n}\\binom{2n-2}{n-1} \\] 同余 同余 定义：设\\(m\\)是正整数，\\(a\\)和\\(b\\)是整数。如果\\(m\\mid a-b\\)，则称\\(a\\)模\\(m\\)同余于\\(b\\)，或\\(a\\)与\\(b\\)模\\(m\\)同余，记作 \\[ a\\equiv b(mod \\,\\,m) \\] 性质：若\\(a\\equiv b(mod\\,\\,m),c\\equiv d(mod\\,\\,m)\\)，则 \\[ a+c\\equiv b+d(mod\\,\\,m)\\,\\,\\,\\,\\,a-c\\equiv b-d(mod\\,\\,m) \\] \\[ ac\\equiv bd(mod\\,\\,m) \\] \\[ a^k\\equiv b^k(mod\\,\\,m),k\\geq0 \\] 一次同余方程 一次同余方程的形式为 \\[ ax\\equiv c(mod \\,\\,m),m&gt;0 \\] 一次同余方程的解即为使方程成立的整数。 方程\\(ax\\equiv c(mod \\,\\,m),m&gt;0\\)有解的充要条件为\\(gcd(a,m)|c\\)，即裴蜀定理。 证明略。 逆元 定义：如果\\(ab\\equiv 1(mod \\,\\,m)\\)，则称\\(b\\)是\\(a\\)在模\\(m\\)意义下的逆元，记作\\(a^{-1}(mod \\,\\,m)\\)或\\(a^{-1}\\) \\(a^{-1}(mod\\,\\,m)\\)是方程\\(ax\\equiv 1(mod \\,\\,m)\\)的解。 当且仅当\\(gcd(a,m)=1\\)时，\\(a^{-1}(mod\\,\\,m)\\)才存在，且只有一个。 扩展欧几里得算法 比较简单，而且会了，略。 中国剩余定理(CRT) 解如下方程组 \\[ \\begin{cases} x\\equiv a_1(mod\\,\\,m_1)\\\\ x\\equiv a_2(mod\\,\\,m_2)\\\\ \\cdots\\\\ x\\equiv a_n(mod\\,\\,m_n) \\end{cases} \\] 其中\\(m_1,m_2,\\cdots,m_n\\)两两互质且\\(M=\\prod^n_{i=1}m_i\\)较小 其解为 \\[ x\\equiv \\sum^n_{i=1}a_i(\\dfrac{M}{m_i})^{-1}\\dfrac{M}{m_i}(mod\\,\\,M) \\] 其中注意\\(\\dfrac{M}{m_i}\\)的逆元是在\\(mod\\,\\,m_i\\)的意义下的。 欧拉函数 欧拉函数\\(\\phi(n):\\{1,\\cdots,n-1\\}\\)中与\\(n\\)互质的数的个数。 性质： \\(\\phi(n)=n\\prod_{p\\mid n}(1-\\dfrac{1}{p})\\)。 \\(\\forall n&gt;1\\)，\\(1\\)到\\(n\\)种与\\(n\\)互质的数的和为\\(\\dfrac{n\\times\\phi(n)}{2}\\)。 若\\(gcd(a,b)=1\\)，则\\(\\phi(ab)=\\phi(a)\\phi(b)\\)。 设\\(p\\)为质数，若\\(p\\mid n\\)且\\(p^2\\mid n\\)，则\\(\\phi(n)=\\phi(\\dfrac{n}{p})*p\\)。 设\\(p\\)为质数，若\\(p\\mid n\\)且\\(p^2\\nmid n\\)，则\\(\\phi(n)=\\phi(\\dfrac{n}{p})*(p-1)\\) \\(\\sum_{d\\mid n}\\phi(d)=n\\) 欧拉定理 定理（欧拉定理）设\\(a\\)与\\(n\\)互质，则 \\[ a^{\\phi(n)}\\equiv1(mod\\,\\,m) \\] 欧拉定理证明太复杂，略。 欧拉定理推论 \\[ 1.\\because gcd(a,m)=1\\therefore a^{-1}\\equiv a^{\\phi(m)-1}(mod\\,\\,m)\\\\ \\] \\[ 2.\\,a^b\\equiv \\begin{cases} a^b,b&lt;\\phi(m)\\\\ a^{b\\,\\,mod\\,\\, \\phi(m)+\\phi(m)},b\\geq \\phi(m) \\end{cases}(mod\\,\\,m) \\] 推论1可用于求逆元，推论2可以降低要求的幂次（欧拉降幂） 费马小定理（可以用欧拉定理直接一步推出），设\\(p\\)是质数，\\(a\\)与\\(p\\)互质，则 \\[ a^{p-1}\\equiv1(mod\\,\\,p)\\,\\,,\\,\\,a^p\\equiv a(mod\\,\\,p) \\] *素性测试(Miller-Rabin) 即检测一个数是否是质数。 虽然Wilson定理对于给定的正整数\\(n\\)，其为素数的充要条件为 \\[ (n-1)!\\equiv-1(mod\\,\\,n) \\] 但是运用Wilson定理的计算量太大，目前，有一些随机算法可以进行素性测试，比如下面描述的Miller-Rabin算法。 这个算法是有错误概率的，从数学上无法证明通过测试的数一定是质数，检测\\(k\\)次，其错误概率为\\((\\dfrac{1}{4})^k\\)，这是保守估计，检测多次后错误概率很小。 引理1（费马小定理）：设\\(p\\)是质数，\\(a\\)与\\(p\\)互质，则\\(a^{p-1}\\equiv1(mod\\,\\,p)\\)，费马小定理只是\\(n\\)为质数的必要条件。 引理2（二次探测定理）：如果\\(p\\)是一个质数，且\\(0&lt;x&lt;p\\)，则方程\\(x^2\\equiv1(mod\\,\\,p)\\)的解为\\(x=1\\)或\\(x=p-1\\)。 该算法的过程为： 给定奇数\\(n\\)，令\\(n-1=2^qm\\)为了判断是否为素数，首先测试\\(a^{2^qm}\\equiv1(mod\\,\\,n)\\)是否成立，不成立，则\\(n\\)一定为合数，成立则进一步测试。 考察下面的Miller数列 \\(a^m(mod\\,\\,n),a^{2m}(mod\\,\\,n),a^{4m}(mod\\,\\,n),\\cdots,a^{2^{q-1}m}(mod\\,\\,n)\\) 若\\(a^m\\equiv1(mod\\,\\,n)\\)，或者存在某个整数\\(0\\leq r\\leq q-1\\)，使\\(a^{2^rm}\\equiv n-1(mod\\,\\,n)\\)成立，则称\\(n\\)通过Miller测试。 具体实现流程： \\(1.\\,\\)对于偶数和\\(0,1,2\\)可以直接判断。 \\(2.\\,\\)设要测试的数为\\(x\\)，我们取一个较小的质数\\(a\\)，设\\(s,t\\)，满足\\(2^s\\times t=x-1\\)，其中\\(t\\)是奇数。 \\(3.\\,\\)我们先算出\\(a^t\\)，然后不断地平方并且进行二次探测（进行\\(s\\)次）。 \\(4.\\,\\)最后我们根据费马小定理，如果最后\\(a^(x-1)\\not\\equiv1(mod\\,\\,x)\\)，则说明\\(x\\)为合数。 备注： \\(1.\\,\\)我们可以多选择几个\\(a\\)，如果全部通过，那么\\(x\\)大概率是质数。 \\(2.\\,\\)Miller-Rabin素数测试中，“大概率”意味着几率非常大，基本上可以放心使用。 \\(3.\\,\\)当\\(a\\)取遍所有小于\\(30\\)的所有质数时，可以证明\\(int\\)范围内不会出错。 *大数质因数分解(Pollard Rho) 给定你一个数\\(n\\)，让你把它分解成多个素数的乘积。 对于一个数\\(n\\)，只需要如下步骤即可分为若干个素数： 找到一个数\\(p\\)，使\\(p\\mid n\\) 那么\\(n\\)就可以变成\\(p\\)和\\(\\dfrac{n}{p}\\) 如果\\(p\\)和\\(\\dfrac{n}{p}\\)不是素数，当成\\(n\\)重新第一步。 判断\\(p\\)是否为质数用Miller-Rabin算法，最关键的是找到这个素数\\(p\\)。 因为随机产生\\(p\\)可能一直找不到，所以我们要用下面的方法，用两个数的差代替\\(p\\) 随机产生一个数\\(p_1\\)和一个随机常数\\(c\\)，令\\(p_2=(p_1^2+c)\\mod n\\) 如果\\(|p_2-p_1|\\)可以被\\(n\\)整除，说明已经找到，如果找不到，令\\(p_1=p_2\\)继续第一步。 也就是\\(p-&gt;(p^2+c)\\mod n\\)，这样基本是不会出现\\(p\\)变回从前的数从而进行循环的情况。且一直重复的情况下，\\(|(p^2+c)\\mod n\\,\\,\\,-p|\\)也基本不会重复。 如何判环？使用数组和map空间会爆炸，所以使用Floyd判环这种空间复杂度为\\(O(1)\\)的方法。 因为循环节可能是走着走着才出现的，就像希腊字母\\(\\rho\\)(Rho)，所以此法得名Pollard Rho。 杂项 矩阵快速幂 挺简单的，就不记了。 高斯消元 具体实现没有记录。 复杂度\\(O(nm^2)\\)。 在非质数剩余系下的消元使用辗转相除法。如： \\[ \\begin{cases} 4x+6y\\equiv10(mod\\,\\,12)\\\\ 2x+10y\\equiv6(mod\\,\\,12) \\end{cases} \\] 高斯消元在OI中的用处： 它的特征在于转移成环。 如果是最优化类的转移成环，使用最短路。 如果是计数类的转移成环，解方程。 期望DP 例题：随机游走问题 给定一个\\(n\\)个点\\(m\\)条边的简单无向连通图，一开始有一个人在\\(1\\)号点。 每次行走，他都会等概率地选择一条与该点相邻的边，沿着这条边走向下一个点。 问从\\(1\\)号点走到\\(n\\)号点的期望步数。 记\\(f_u\\)表示点\\(u\\)走到\\(n\\)的期望步数。 对每个点建立方程 \\[ f_u=\\begin{cases} \\dfrac{\\sum_{(u,v)\\in E}f_v}{deg_u}+1,u\\neq n\\\\ 0, u=n \\end{cases} \\] 运用高斯消元解决。 例题：树上随机游走问题 对每个点建立同样的方程。 将\\(n\\)号点设为根节点。 此时，叶子的方程总是\\(f_u=f_{father_u}+1\\)。 \\(f_u\\)只和\\(f_{father_u}\\)有关系，直接用\\(f_{father_u}+1\\)表示\\(f_u\\)。 自底向上地消元，每次把儿子元用父亲元表示。 消到\\(n\\)的儿子，用\\(f_n\\)自顶向下的带入回去。","categories":[{"name":"培训","slug":"培训","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/"},{"name":"FOI2021夏令营","slug":"培训/FOI2021夏令营","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/FOI2021%E5%A4%8F%E4%BB%A4%E8%90%A5/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]},{"title":"Day2","slug":"FOI夏令营2021Day2","date":"2021-09-01T04:00:00.000Z","updated":"2021-11-02T13:16:03.059Z","comments":true,"path":"2021/09/01/FOI夏令营2021Day2/","link":"","permalink":"http://example.com/2021/09/01/FOI%E5%A4%8F%E4%BB%A4%E8%90%A52021Day2/","excerpt":"","text":"Day2 字符串算法 林恺 字符串 hash 前置技能 快速幂 费马小定理 乘法逆元 什么是hash hash是一种将字符串转化为数字的对应关系，用于加快字符串比较的速度。 冲突：一个字符串仅对应1个\\(hash\\)值，1个\\(hash\\)值可以对应很多字符串。 常见的hash方法 求一个串的hash值 \\(hash(s)=\\sum{s_i}\\times{base^i} \\,\\,mod\\,\\,p\\) 求一个字串的hash值 \\(hash_{l,r}=\\dfrac{pre_r-pre_{l-1}}{base^{l-1}}\\) 例题：一个简单的习题1 给定两个由小写字母构成的字符串\\(S,T\\),问\\(T\\)在\\(S\\)中出现了多少次？ \\(|S|,|T|\\leq{10^6}\\) 例题：一个简单的习题2 给定一个字符串\\(S\\)，请你求出其中有多少个不同的字串 \\(|S|\\leq{10^6}\\) 例题：一个简单的习题3 给定一个字符串\\(S\\)，请你求出其中最长的回文串 \\(|S|\\leq{10^6}\\) 记录前后缀hash，枚举中心点，倍增二分半径 例题：OKR-A Horrible Poem 给定一个字符串\\(S\\)，以及\\(q\\)个询问，每个询问查询子区间\\([l,r]\\)的最小循环节 \\(|S|,q\\leq{10^5}\\) \\(O(\\sqrt{n})\\)枚举循环节长度，\\(O(1)\\)判断循环节从 Trie 例题：First! G 给定\\(n\\)字符串\\(s_i\\)，询问对于哪些字符串，可以通过重排字母表顺序的方式使其字典序最小 \\(\\sum^{n}_{i=1} |s_i|\\leq 3\\times 10^5\\) 对于每个\\(s_i\\)，建立字符序小的字母指向字符序大的字母的有向图，最后判断图中有没有环。 例题：Reverse 给定\\(n\\)个数\\(a_i\\)，你需要完成以下两种操作共\\(q\\)次。 给定\\(k\\)，对于所有比\\(k\\)大的数，做“Selia翻转”。Selia翻转是指将\\(k\\)与被反转的数写成二进制形式，找到他们最高的不同的为，反转低于改为的所有二进制位（0变成1，1变成0） 询问值在\\([l,r]\\)内的数有几个。 \\(n,q\\leq10^5,a_i\\leq10^9\\) \\(01Trie\\)树，在所有大于\\(k\\)的子树的根节点打上反转的tag KMP （上课太紧凑，组织不出语言说明KMP） 讲的比较好的别人的博客 引入例题 给定两个由小写字母构成的字符串\\(S,T\\),问\\(T\\)在\\(S\\)中出现了多少次？ \\(|S|,|T|\\leq{10^6}\\) 例题：一道简单的题目 给定一个字符串\\(S\\)，你可以将这个字符串切成两部分，并交换这两部分的顺序。问有多少种方案可以得到原串。 \\(|S|\\leq 10^6\\) 把原串在复制一遍得到新串，作为文本串和原串作KMP 例题：最小循环节 给定字符串\\(S\\)，你可以在\\(S\\)末尾加上任意字符串\\(T\\)，求\\(S+T\\)的最小循环节。 \\(|S|\\leq 10^5\\) 本题：设字符串串长为\\(n\\)，则其最小循环节长度为\\(n-next_n\\) AC自动机 （上课太紧凑，组织不出语言说明AC自动机） 讲的比较好的别人的博客 引入例题 给定一个匹配串\\(S\\)和\\(n\\)个被匹配串\\(T_i\\)，求有多少串\\(T_i\\)是\\(S\\)的字串。 \\(|S|, \\sum^{n}_{i=1} |T_i| \\leq 10^5\\) 例题：文本生成器 给定\\(n\\)个字符串\\(s_i\\)，求有多少长度为\\(m\\)的字符串\\(t\\)，满足\\(t\\)中不存在任何一个字串\\(s_i\\) \\(n, m, |s_i|\\leq 100\\) 在AC自动机上DP 例题：一点数理知识 给定一个匹配串\\(S\\)和\\(n\\)个被匹配串\\(T_i\\)，每个串\\(T_i\\)在\\(S\\)中出现了多少次。 \\(|S|,\\sum^{n}_{i=1} |T_i| \\leq 10^5\\) Manacher （上课太紧凑，组织不出语言说明Manacher） 讲的比较好的别人的博客 引入例题 给定一个字符串，请你求出其中最长的回文子串 \\(|S|\\leq10^6\\) 最长双回文串 定义双回文串为两个回文串依次拼接而成的串，求\\(s\\)的最长双回文串。 \\(|s|\\leq 10^5\\)","categories":[{"name":"培训","slug":"培训","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/"},{"name":"FOI2021夏令营","slug":"培训/FOI2021夏令营","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/FOI2021%E5%A4%8F%E4%BB%A4%E8%90%A5/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]}],"categories":[{"name":"日常训练","slug":"日常训练","permalink":"http://example.com/categories/%E6%97%A5%E5%B8%B8%E8%AE%AD%E7%BB%83/"},{"name":"培训","slug":"培训","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/"},{"name":"FOI2021夏令营","slug":"培训/FOI2021夏令营","permalink":"http://example.com/categories/%E5%9F%B9%E8%AE%AD/FOI2021%E5%A4%8F%E4%BB%A4%E8%90%A5/"}],"tags":[{"name":"OI","slug":"OI","permalink":"http://example.com/tags/OI/"}]}